(defun calculate_sequence_length (n) 
  (let ((counter 0))
    (loop while (/= n 1)
        do (progn
             (if (= 0 (mod n 2))
                 (setq n (/ n 2))
                 (setq n (+ 1 (* 3 n))))
             (incf counter)))
    counter))

(defun get_min_index(seq_list)
  (let ((min_ind 0))
    (dotimes (i (length seq_list))
      (let ((min_pair (nth min_ind seq_list)))
        (if (< (second (nth i seq_list)) (second min_pair))
          (setf min_ind i))
        (if (= (second (nth i seq_list)) (second min_pair))
          (if (> (first (nth i seq_list)) (first min_pair))
            (setf min_ind i)))))
    min_ind))

